group pierwszy;

deflt(elem) ::= <<
    <elem; separator="\n">
>>

int(i) ::= <<
PUSH #<i>
>>

twoop(p1, p2) ::= <<
<p1>
<p2>
>>

dodaj(p1,p2) ::= <<
<twoop(p1,p2)>
ADD
>>

odejmij(p1,p2) ::= <<
<twoop(p1,p2)>
SUB
>>

mnoz(p1,p2) ::= <<
<twoop(p1,p2)>
MUL
>>

dziel(p1,p2) ::= <<
<twoop(p1,p2)>
DIV
>>

nie(p) ::= <<
<p>
NOT
>>

gt(p1,p2) ::= <<
<twoop(p1,p2)>
SUB
>>

eq(p1,p2) ::= <<
<twoop(p1,p2)>
SUB
NOT
>>

assign(id, p) ::= <<
<p>
POP [<id>]
>>

dek(n) ::= <<
DD <n>
>>

var_decl_init(id, p) ::= <<
DD <id>
<p>
POP <id>
>>

id(id) ::= <<
PUSH [<id>]
>>

if_no_else(cond, thenBlock, endLabel) ::= <<
<cond>
JE <endLabel>
<thenBlock>
<endLabel>:
>>

if_else(cond, thenBlock, elseBlock, elseLabel, endLabel) ::= <<
<cond>
JE <elseLabel>
<thenBlock>
JMP <endLabel>
<elseLabel>:
<elseBlock>
<endLabel>:
>>

while_loop(cond, body, startLabel, endLabel) ::= <<
<startLabel>:
<cond>
JE <endLabel>
<body>
JMP <startLabel>
<endLabel>:
>>